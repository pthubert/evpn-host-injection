<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">

<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="no"?>
<?rfc subcompact="no"?>
<?rfc authorship="yes"?>
<?rfc tocappendix="yes"?>
<rfc  xmlns:xi="http://www.w3.org/2001/XInclude" category="std" ipr='trust200902' tocInclude="true" updates='' obsoletes="" consensus="true" submissionType="IETF" xml:lang="en" version="3" docName="draft-thubert-bess-evnp-Host-injection-00" >


<front>


    <title abbrev='eVPN Unaware Hosts'>Routing for eVPN Hosts</title>

   <author initials='P' surname='Thubert' fullname='Pascal Thubert'>
      <organization abbrev='Cisco Systems'>Cisco Systems, Inc</organization>
      <address>
         <postal>
            <street>Building D</street>
            <street>45 Allee des Ormes - BP1200 </street>
            <city>Mougins - Sophia Antipolis</city>
            <code>06254</code>
          <country>France</country>
         </postal>
         <phone>+33 497 23 26 34</phone>
         <email>pthubert@cisco.com</email>
      </address>
   </author>

    <author fullname="Tony Przygienda" initials="A." surname="Przygienda">
        <organization>Juniper Networks</organization>
        <address>
            <postal>
                <street>1137 Innovation Way
                </street>
                <city>Sunnyvale</city>
                <region>CA
                </region>
                <code/>
                <country>USA
                </country>
            </postal>
            <phone/>
            <email>prz@juniper.net
            </email>
            <uri/>
        </address>
    </author>
<!--
   <author initials='S' surname='Litkowski' fullname='Stephane Litkowski' >
      <organization abbrev='Cisco Systems'>Cisco Systems, Inc</organization>
      <address>
         <postal>
          <country>France</country>
         </postal>
         <phone></phone>
         <email>slitkows@cisco.com</email>
      </address>
   </author>

   <author initials='A' surname='Sajassi' fullname='Ali Sajassi' >
      <organization abbrev='Cisco Systems'>Cisco Systems, Inc</organization>
      <address>
         <postal>
          <country>France</country>
         </postal>
         <phone></phone>
         <email>sajassi@cisco.com</email>
      </address>
   </author>

-->

<date/>
<area>Routing</area>
<workgroup>BESS</workgroup>


<abstract>
<t>
  This specification adds attributes to eVPN to carry IPv6 address metadata
  learned from RFC 8505 and RFC 8928 so as to maintain a synchronized copy of
  the 6LoWPAN ND registrar at each eVPN router and perform locally a unicast
  IPv6 ND service for address lookup and duplicate address detection.
</t>
</abstract>


</front>

<middle>


<section anchor='introduction'><name>Introduction</name>


<t>
  <xref target='RFC8505'>"Registration Extensions for IPv6 over 6LoWPAN
  Neighbor Discovery"</xref> (ND) provides a routing-agnostic Host-to-Router
  Link-Local interface to claim an IPv6 address and obtain reachability services
  for that address. <xref target='RFC8505'/> is already used to redistribute
  host routes in RPL <xref target='RFC9010'/> and RIFT
  <xref target='I-D.ietf-rift-rift'>"Routing in Fat Trees"</xref>, and to
  maintain a proxy-ND state in a backbone router <xref target='RFC8929'/>.
</t>

<t>
  <xref target="RFC8505"/> specifies a unicast address registration mechanism
  that enables the host called a 6LowPAN Node (6LN) to install a ND binding
  state in the 6LowPAN Router (6LR) that can serve as Neighbor Cache Entry (NCE),
  though it is not operated as a cache.
  The protocol provides the means to reject the registation in case of address
  duplication. It also enables to discriminate mobility from multihoming.
  <xref target='RFC8928'/> adds the capability to verify the ownership of the address and prevent an attacker from stealing and/or impersonating an address.
</t>

<t>
  <xref target="RFC8505"/> defines the 6LoWPAN Border Router (6LBR) as an
  abstract address registrar that provides autoritative service for Address
  Registration and duplicate detection. The 6LBR stores address metadata
  that is obtained during the Address Registration, including a owner ID and a
  sequence counter.
  As part of the process of a new Address Registration, the 6LR queries the 6LBR
  for existing metadata related to the address being registered. This enables in
  particular to detect a duplication and reject the registration.
  This specification extends the 6LBR abstract data model to store the
  Link Layer Address (LLA) of the Registering Node. This enables the 6LBR to
  perform locally, and using unicast communication, the IPv6 ND services of
  address lookup and duplicate address detection.
</t>

<t>
  The <xref target='RFC8505'/> address registrar can be centralized, but it can
  also be distributed and maintained synchronized using a routing protocol.
  This specification adds attributes to eVPN to carry the IPv6 address metadata
  learned from <xref target='RFC8505'/> so as to maintain a synchronized copy of
  the 6LBR abstract data at each eVPN router.
</t>




</section>

<section><name>Terminology</name>
<section anchor='bcp'><name>Requirements Language</name>
<t>

    The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
    "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
    "OPTIONAL" in this document are to be interpreted as described in BCP 14
 <xref target='RFC2119'/> <xref target='RFC8174'/> when, and only when, they
    appear in all capitals, as shown here.

</t>
</section>	<!-- end section "Requirements Language" -->


<section anchor='gloss'><name>Glossary</name>
 <t> This document uses the following acronyms:
    </t>

    <dl  spacing='compact'>
    <dt>6LN:</dt><dd> 6LoWPAN Node (the Host) </dd>
    <dt>6LR:</dt><dd> 6LoWPAN router (the router) </dd>
    <dt>6LBR:</dt><dd> 6LoWPAN Border router (the reflector)</dd>
    <dt>AMC:</dt><dd> Address Mapping Confirmation</dd>
    <dt>AMR:</dt><dd> Address Mapping Request</dd>
    <dt>EARO:</dt><dd> Extended Address Registration Option </dd>
    <dt>DAD:</dt><dd> Duplicate Address Detection </dd>
    <dt>ICMPv6:</dt><dd> Internet Control Message Protocol for IPv6</dd>
    <dt>EVPN:</dt><dd> Ethernet VPN </dd>
    <dt>LLA:</dt><dd> Link-Layer Address (the MAC address on Ethernet)</dd>
    <dt>NA:</dt><dd>  Neighbor Advertisement </dd>
    <dt>NCE:</dt><dd>  Neighbor Cache Entry  </dd>
    <dt>ND:</dt><dd>  Neighbor Discovery  </dd>
    <dt>NS:</dt><dd>  Neighbor Solicitation  </dd>
    <dt>RA:</dt><dd>  Router Advertisement  </dd>
    <dt>ROVR:</dt><dd> Registration Ownership Verifier </dd>
    <dt>TID:</dt><dd> Transaction ID (a sequence counter in the EARO) </dd>
    <dt>TIO:</dt><dd> Transit Information Option</dd>
    <dt>SLAAC:</dt><dd> Stateless Address Autoconfiguration</dd>
    <dt>SLLAO:</dt><dd> Source Link-Layer Address Option</dd>
    <dt>TLLAO:</dt><dd> Target Link-Layer Address Option</dd>

        <dt>ROVR MAC:</dt><dd> MAC obtained from a host meeting requirements in <xref target="prereq"/> </dd>
        <dt>Validated ROVR MAC:</dt><dd> ROVR MAC validated by procedures specified in <xref target='RFC8928'/></dd>
        <dt>ROVR Node:</dt><dd> EVPN node capable of advertising ROVR MACs </dd>
        <dt>non-ROVR Node:</dt><dd> EVPN node not supporting extensions defined in this document.</dd>

    </dl>


</section> <!-- end section "Subset of a 6LoWPAN Glossary" -->


<section anchor='lo'><name>References</name>


<t>
This document uses the terms Clos fabric and Fat Tree interchangeably, to
refer to a folded spine-and-leaf topology as defined in the terminology section
of <xref target='I-D.ietf-rift-rift'>"RIFT: Routing in Fat Trees"</xref>.
</t>
<t>
The term "leaf" represents the access switch that connects the servers to the
Fat Tree. The leaf is typically a Top-of-Rack (ToR) switch.
</t>
<t>
This specification uses the terms 6LN, 6LR and 6LBR to refer specifically to
nodes that implement the said roles in <xref target='RFC8505'/> and does not
expect other functionality such as 6LoWPAN Header Compression:
</t>

<ul>
   <li>
   In the context of this document, the 6LN is a server that adversises an
   address mapping using <xref target='RFC8505'/>, and optionally protects its
   ownership with <xref target='RFC8928'/>.
   </li><li>
   The 6LR and 6LBR function are collapsed at the leaf and its state is
   synchonized with that of the eVPN functional support using an internal
   interface that is out of scope. That interface could be "pull" meaning that
   the 6LBR fetches the eVPN information when it needs it, or "push", meaning
   that any information that eVPn distributes is immediately fed in all the
   6LBRs in all the leaves. Note that this is pure control plane and is not
   subject to abbreviating optimization as the FIB may be.
   </li>
</ul>

<t>
	In this document, readers will encounter terms and concepts
	that are discussed in the following documents:
</t>
<dl>
	<dt>eVPN:</dt><dd> <xref target='RFC7432'>"BGP MPLS-Based Ethernet VPN"
		</xref> and
	    <xref target='RFC8365'>"Network Virtualization Overlay Solution"
		</xref>, </dd>

	<dt>Classical IPv6 ND:</dt><dd> <xref target='RFC4861'>"Neighbor Discovery for IP version 6"
		</xref> and
	    <xref target='RFC4862'>"IPv6 Stateless Address Autoconfiguration"
		</xref>, </dd>


	<dt>6LoWPAN ND:</dt><dd> <xref target='RFC6775'>Neighbor Discovery Optimization for Low-Power
		and Lossy Networks</xref>,
	    <xref target='RFC8505'>
		"Registration Extensions for 6LoWPAN Neighbor Discovery"</xref>,
        <xref target='RFC8928'>
        "Address Protected Neighbor Discovery for Low-power and Lossy Networks"
        </xref>, and <xref target='RFC8929'>"IPv6 Backbone Router"</xref>.
	</dd>
</dl>
</section>	<!-- end section "References" -->

</section>	<!-- end section "Terminology" -->


<section anchor='lpnd'><name>6LoWPAN Neighbor Discovery</name>
<t>
  6LoWPAN Neighbor Discovery defines a stateful address autoconfiguration
  mechanism for IPv6. 6LoWPAN ND enables to divorce the L3 abstractions for
  link and subnet from the characteristics of the L2 link and broadcast domain.
  It is applicable beyond its original field of IoT to any environment where
  the broadcast nature of the underlaying network should not be exploited, e.g.,
  in the case of a wireless link where broadcast uses an excessive amount of
  spectrum, and a distributed cloud, where it may span too widely.
</t>
<t>
  In contrast to Stateless Address Autoconfiguration (SLAAC) <xref target=
  'RFC4862'/> which relies on broadcast for duplicate address detection (DAD)
  and address lookup, 6LoWPAN ND installs and maintains a state in the
  neighbors for the duration of their interaction. Though it is also called a
  Neighbor Cache Entry (BCE) in <xref target='RFC6775'/>, and in contrast with
  the the BCE in SLAAC, that state is not a cache that can be casually flushed and rebuilt. It must be installed proactively  and refreshed periodically to
  maintain the connecticity and enable unicast-only operations.
</t>
<t>
  The typical abstraction for an IP Link with 6LoWPAN ND is point-to-point (P2P)
  between a node and a router. An IP interface bundles multiple links between
  this node and peers in the same subnet, aka point-to-multipoint (P2MP). The
  subnet is a not-on-link L3-connected collection of such nodes and links, which
  means that the any-to-any connectivity across the subnet is ensured through L3
  routing as opposed to transitive (any-to-any) reachability from L2.
</t>
<t>
  This section goes through the 6LoWPAN ND mechanisms that this specification
  leverages, as a non-normative reference to the reader. The relevant normative
  text is to be found in <xref target='RFC6775'/>, <xref target='RFC8505'/>, and
  <xref target='RFC8928'/>.
</t>

<section anchor='R6775'><name>RFC 6775 Address Registration</name>

<t>
   The classical "IPv6 Neighbor Discovery (IPv6 ND) Protocol"
   <xref target='RFC4861'/> <xref target='RFC4862'/> was defined for serial
   links and transit media such as Ethernet. It is a reactive protocol that
   relies heavily on multicast operations for Address Discovery (aka Lookup) and
   Duplicate Address Detection (DAD).
</t><t>
   <xref target='RFC6775'>
   "Neighbor Discovery Optimizations for 6LoWPAN networks"</xref>
   adapts IPv6 ND for operations over energy-constrained LLNs.
   The main functions of <xref target='RFC6775'/> are to proactively establish
   the Neighbor Cache Entry (NCE) in the 6LR and to prevent address duplication.
   To that effect, <xref target='RFC6775'/> introduces a new unicast Address
   Registration  mechanism that contributes to reducing the use of multicast
   messages compared to the classical IPv6 ND protocol.

</t><t><xref target='RFC6775'/> defines a new Address
   Registration Option (ARO) that is carried in the unicast
   Neighbor Solicitation (NS) and Neighbor Advertisement (NA) messages between
   the 6LoWPAN Node (6LN) and the 6LoWPAN router (6LR).

   It also defines the Duplicate Address Request (DAR) and Duplicate
   Address Confirmation (DAC) messages between the 6LR and the 6LBR).
   In an LLN, the 6LBR is the central repository of all the Registered Addresses
   in its domain and the source of truth for uniqueness and ownership.
</t>
</section>	<!-- end section "RFC 6775" -->
<section anchor='R8505E'><name>RFC 8505 Extended Address Registration</name>

<t>
   <xref target='RFC8505'>
   "Registration Extensions for 6LoWPAN Neighbor Discovery"</xref>
   updates RFC 6775 into a generic Address Registration mechanism that can be
   used to access services such as routing and ND proxy. To that effect,
   <xref target='RFC8505'/> defines the Extended Address Registration Option
   (EARO), shown in <xref target='EARO'/>:
</t>
 <figure anchor='EARO'><name>EARO Option Format</name>
 <artwork align="center"> <![CDATA[
   0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |     Type      |     Length    |    Status     |    Opaque     |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Rsvd | I |R|T|     TID       |     Registration Lifetime     |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                                                               |
 ...             Registration Ownership Verifier                 ...
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    ]]></artwork>
 </figure>


<section anchor='R8505ER'><name>R Flag</name>
<t>
<xref target='RFC8505'/> introduces the R Flag in the EARO.
   The Registering Node sets the R Flag to indicate whether the 6LR should
   ensure reachability for the Registered Address.
   If the R Flag is set to 0, then the Registering Node handles the reachability
   of the Registered Address by other means. In an eVPN network, this means that
   either it is a RAN that injects the route by itself or that it uses another
   eVPN router for reachability services.
</t><t>
   This document specifies how the R Flag is used in the context of eVPN.
   An eVPN Host that implements the 6LN functionality from <xref target='RFC8505'/>
   requires reachability services for an IPv6 address if and only if it sets
   the R Flag in the NS(EARO) used to register the address to a 6LR acting as
   an eVPN border router. Upon receiving the NS(EARO), the eVPN router
   generates a BGP advertisement for the Registered Address if and only if the R
   flag is set to 1.
</t><t>
</t><t>

   <xref target='RFC9010'/> specifies that the 'R' flags is
   set in the responded NA messages if and only if the route was installed.
   This specification echoes that behaviour.
</t>

</section> <!-- end section "R Flag" -->
<section anchor='R8505ETID'><name>TID, "I" Field and Opaque Fields</name>

<t>
   When the T Flag is set to 1, the EARO includes a sequence counter called
   Transaction ID (TID), that is needed to format the MAC Mobility Extended Community.
   This is the reason why the support of <xref target='RFC8505'/>
   by the Host, as opposed to only <xref target='RFC6775'/>, is a prerequisite for
   this specification); this requirement is fully explained in
   <xref target='prereq6lp'/>. The EARO also
   transports an Opaque field and an associated "I" field that describes what
   the Opaque field transports and how to use it.
</t><t>
   This document specifies the use of the "I" field and the Opaque
   field by a Host.
</t>

</section> <!-- end section "TID, I Field and Opaque Fields" -->
<section anchor='R8505stat'><name>Status</name>

<t>
   The values of the EARO status are maintained by IANA in the
   Address Registration Option Status Values subregistry
   <xref target="IANA-EARO-STATUS"/> of the
   Internet Control Message Protocol version 6 (ICMPv6) Parameters registry.
</t>
<t>
  <xref target='RFC6775'/> and <xref target='RFC8505'/> defined the original
  values whereas <xref target='RFC9010'/> reduced range to 64 values and
  reformated the octet field to enable to transport an external error, e.g.,
  coming form a routing protocol.
</t>
<t>
  This specification uses the  format expressed in <xref target='RFC9010'/>.
  The value of 0 denotes an unqualified success, 1 indicates an address duplication, 3 a TID value that is outdated, and 4 is used in an asynchronous
  NA to indicate that 6LN should remove that address and possibly form new ones.
</t>
</section> <!-- end section "Status" -->
<section anchor='R8505EROVR'><name>Route Ownership Verifier</name>
<t>
   Section 5.3 of <xref target='RFC8505'/> introduces the Registration
   Ownership Verifier (ROVR) field of variable length from 64 to 256 bits.
   The ROVR is a replacement of the EUI-64 in the ARO
   <xref target='RFC6775'/> that was used to identify uniquely an Address
   Registration with the Link-Layer address of the owner but provided no
   protection against spoofing.
</t><t>

   <xref target='RFC8928'>"Address Protected Neighbor Discovery for
   Low-power and Lossy Networks"</xref> leverages the ROVR field as a
   cryptographic proof of ownership to prevent a rogue third party from
   registering an address that is already owned.
   The use of ROVR field enables the 6LR to block traffic that is not
   sourced at an owned address.
</t><t>

   This specification does not address how the protection by
   <xref target='RFC8928'/> could be extended for use in eVPN.
   On the other hand, it adds the ROVR to the BGP advertisement to share the
   state with the other routers via the Reflector (see <xref target='tgt'/>),
   which means that the routers that are aware of the Host route are also aware
   of the ROVR associated to the Target Address, whether it is cryptographic
   and should be verified.
</t>

</section> <!-- end section "ROVR" -->

</section> <!-- end section "RFC 8505 Extended ARO" -->
<section anchor='R8505D'><name>RFC 8505 Extended DAR/DAC</name>
<t>
   <xref target='RFC8505'/> updates the DAR/DAC messages into the Extended
   DAR/DAC to carry the ROVR field. The EDAR/EDAC exchange is not needed in this
   specification as the BGP fabric as a whole is synchronized to the same state
   via BGP and the reflector. Based on its local state, the router can check
   whether the proposed route is new and legit, and reject it otherwise.
</t>

</section> <!-- end section "RFC 8505 Extended DAR/DAC" -->

<section anchor='R7400'><name>RFC 7400 Capability Indication Option</name>

<t>
   <xref target='RFC7400'> "6LoWPAN-GHC: Generic Header Compression for IPv6
   over Low-Power Wireless Personal Area Networks (6LoWPANs)"</xref> defines the
   6LoWPAN Capability Indication Option (6CIO) that enables a node to expose its
   capabilities in router Advertisement (RA) messages.
</t><t>
   <xref target='RFC8505'/> defines a number of bits in the 6CIO, in particular:
</t>
	<dl spacing='compact'>
	<dt>L:</dt><dd> Node is a 6LR.  </dd>
	<dt>E:</dt><dd> Node is an IPv6 ND Registrar -- i.e., it supports
			  registrations based on EARO.  </dd>
	<dt>P:</dt><dd> Node is a Routing Registrar, -- i.e., an IPv6 ND Registrar
         that also provides reachability services for the Registered Address.
         </dd>
	</dl>
 <figure anchor='CIO'><name>6CIO flags</name>
 <artwork align="center">
    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |     Type      |   Length = 1  |     Reserved      |D|L|B|P|E|G|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                           Reserved                            |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
 </figure>
 <t>

    A 6LR that provides reachability services for a Host in an eVPN network
    as specified in this document includes a 6CIO in its RA messages and
    set the L, P and E flags to 1 as prescribed by <xref target='RFC8505'/>.
 </t>

</section> <!-- end section "RFC 7400 Capability Indication Option" -->


</section> <!-- end section "6LoWPAN Neighbor Discovery" -->

<section anchor='ext8505'><name>Extending 6LoWPAN ND</name>



<section anchor='upd2'><name>Use of the R flag in NA</name>

<t>
   This document extends <xref target='RFC8928'/> and <xref target='RFC8505'/> as follows

   </t><t>
   This document also updates the behavior of a 6LR acting as eVPN router and of a 6LN acting as Host in the 6LoWPAN ND Address Registration  as follows:
   </t>
   <ul>
   <li>
   The use of the R Flag is extended to the NA(EARO) to confirm whether the route was installed.
 </li>
   </ul>

</section> <!-- end section "Enhancements to RFC8928 and RFC8505" -->

<section anchor='dist'><name>Distributing the 6LBR</name>


   <t>
	This specification enables to distribute the 6LBR at the edge of the eVPN
    network and collapse the 6LBR function with that of the eVPN support.
    In that model, the eVPN to 6LBR interaction becomes an internal interface,
    where each side informs the other in case of new information concerning an
    IP to Link-Layer Address (LLA) mapping. Since this is an internal interface,
    this specification makes no assumption on whether the 6LBR stores its own
    representation of the full eVPN state, which means that the eVPN support
    informs the 6LBR in case of any change on the eVPN side (this is called
    the push model, see <xref target="Figpush"/>), or if the 6LBR queries the
    eVPN support when it does not have a mapping to satisfy a request (pull
    model, see <xref target="Figpull"/>).
   </t>
   <t>
    This specification leverages <xref target='RFC8929'/> that augments the
    abstract data model of the 6LBR to store the LLA associated with the
    registered address. Based on that additional state, the 6LBR in a leaf can
    communicate the mapping to the colocated eVPN function and respond to
    unicast address mapping lookups from the server side.
   </t>
   <t>
    In an environment where the server ranges from a classical host to a more
    complex platform that runs a collection of virtual hosts interconnected by
    a virtual switch, but where the host-to-leaf interface remains at layer 2,
    the 6LR and the 6LBR functions can be collapsed in the  leaf.
    The 6LR to 6LBR interaction also becomes an internal interface, and
    there is no need for EDAR/EDAC messages.
   </t>
   <t>
    In that case, the MAC address associated to the Registered Address is indicated in the Target Link-Layer Address Option (TLLAO) in the NS message
    used for the registration, as shown in <xref target="Figdir"/>.
    In the case of a pull model, if the 6LBR does not have a local state for
    the mapping, it queries the eVPN support to obtain the eVPN state if any.
    If a mapping is known then the 6LR/6LBR evaluates the registration for
    address duplication and other possible issues per <xref target='RFC8505'/>.
    Else (this is for a new mapping), if the registration is accepted, then
    the 6LBR notifies the eVPN support to inject a route type 2 in the fabric.
    </t>

<figure anchor="Figdir">
          <name>Direct Registration</name>
       <artwork align="center" name="" type="" alt="">
       <![CDATA[

           Server              Leaf
     +--------------+   +-------------------+
     |              |   |                   |
      6LN                6LR/6LBR       eVPN
       |                    |            |
       | <vSwitch> Ethernet | <call I/F> |
       |                    |            |
       |  NS(EARO)          |            |
       |------------------->|            |
       |                    |            | ^
       |                    |   query    | |
       |                    |----------->| | if pull
       |                    |  response  | | model
       |                    |<-----------| |
       |                                 | v
       |            Evaluation (DAD)     |
       |                                 |
       |                    |new mapping |
       |                    | indication |
       |                    |----------->|
       |                                 | Inject/maintain
       |         store a mapping state   | eVPN route type 2
       |                                 | ------------------>
       |       NA(EARO)     |            | [via BGP Signalling]
       |<-------------------|            |
       |                    |            |
    ]]>
       </artwork>
</figure>
   <t>
    In another type of deployment, the 6LR may be a virtual router in the server
    whereas the 6LBR runs in the leaf node. To address that case, the EDAR/EDAC
    may be used to communicate as shown in figure 5 of <xref target="RFC8505"/>.
    This draft leverages the capability to insert IPv6 ND options in the EDAR
    and EDAC messages introduced in <xref target="RFC8929"/> to place a TLLAO
    that carries the MAC address associated to the Registered address in the
    EDAR and EDAC messages as shown in <xref target="FigDAR"/>:
   </t>

<figure anchor="FigDAR">
          <name>leveraging EDAR</name>
       <artwork align="center" name="" type="" alt="">
       <![CDATA[

           Server                       Leaf
     +----------------+          +----------------+
     |                |          |                |
      6LN          6LR            6LBR        eVPN
       |            |              |            |
       | <vSwitch>  |  Ethernet    | <call I/F> |
       |            |              |            |
       |  NS(EARO)  |              |            |
       |----------->|              |            |
       |            |  EDAR(TLLAO) |            |
       |            |------------->|            |
       |            |              |            | ^
       |            |              |   query    | |
       |            |              |----------->| | if pull
       |            |              |  response  | | model
       |            |              |<-----------| |
       |            |                           | v
       |            |    Evaluation (DAD)       |
       |            |                           |
       |            |              |new mapping |
       |            |              | indication |
       |            |              |----------->|
       |            |                           | Inject/maintain
       |            |   store a mapping state   | eVPN route type 2
       |            |                           | ------------------>
       |            |  EDAC(TLLAO) |            | [via BGP Signalling]
       |            |<-------------|            |
       |  NA(EARO)  |              |            |
       |<-----------|              |            |
       |            |              |            |
    ]]>
       </artwork>
</figure>

</section> <!-- Distributing the 6LBR -->


<section anchor='unic'><name>Unicast Address Lookup with the 6LBR</name>


<t>
  A classical IPv6 ND stack in the server that treats the subnet prefix as
  on-link (more in section 4.6.2. of <xref target="RFC4861" format="default" sectionFormat="of"/>), will resolve an unknown LLA mapping with a multicast
  NS(lookup) message addressed to the solicited node multicast address (SNMA)
  associated with the destination address being resolved. The RECOMMENDED
  operation in that case is for the 6LBR that has a mapping state to forward the
  packet as a unicast MAC to the LLA that is stored for the IPv6 address as
  expected by  <xref target="RFC6085"/>. The actual owner of the address can
  then answer unicast with a NA message, setting the override (O) bit to 1,
  as shown in <xref target="figlkup1"/>.
</t>

<figure anchor="figlkup1">
          <name>Forwarding legacy NS (Lookup)</name>
       <artwork align="center" name="" type="" alt="">
       <![CDATA[

     Local             Local                   Remote
     Server            Leaf                    Server
     +----+          +--------+                +----+
     |    |          |        |                |    |
      6LN             6LR/6LBR                  6LN
       |                 |                       |
       |    Ethernet     |                       |
       |                 |     [via EVPN    ]    |
       |    multicast    |     [Data Tunnels]    |
       |    NS(lookup)   |                       |
       |---------------->|                       |
       |                 |    forward unicast    |
       |                 |     NS(lookup)        |
       |                 |---------------------->|
       |                 |                       |
       |                 |         NA(O)         |
       |                 |<----------------------|
       |      NA(O)      |                       |
       |<----------------|                       |
       |                 |                       |
    ]]>
       </artwork>
</figure>


  <t>
  Section 3.1. of <xref target="RFC8929" format="default" sectionFormat="of"/>
  adds the capability to insert IPv6 ND options in the EDAR and EDAC messages.
  This enables the 6LBR to store the link-layer address associated with the
  Registered Address and to serve as a mapping server.
  <xref target="I-D.thubert-6lo-unicast-lookup"/> leverages that state to define a new unicast address lookup operation, extending the EDAR and EDAC
  messages as the Address Mapping Request (AMR) and Confirmation (AMC) with a
  different Code Prefix <xref target='RFC8505'/>.
  </t>
  <t>
  In that model, the router advertises the subnet prefix as not on-link by
  setting the L flag to 0 in the Prefix Information Option (PIO), more in
  section 4.6.2. of <xref target="RFC4861" format="default" sectionFormat="of"/>.
  The expected behaviour is that the host that communicates with a peer in the
  same subnet refrains from resolving the address mapping and passes the packets
  directly to the router.
  </t>
  <t>In the case where the router is a virtual 6LR running in the server, and the source and destination are in the same subnet served by eVPN, the router
  then resolves the address mapping on behalf of the host. To that effect,
  the router sends a unicast AMR message to the 6LBR.
  The message contains the SLLAO of the router to which the 6LBR will reply.
  If the binding is found, the 6LBR replies with an AMC message that contains
  the TLLOA with the requested MAC address, as shown in <xref target="unilook1"/>.
  </t>
<figure anchor="unilook1">
          <name>Unicast Lookup from the virtual Host</name>
       <artwork align="center" name="" type="" alt="">
       <![CDATA[

           Local                 Local             Remote
           Server                 Leaf             Server
     +----------------+       +---------+          +----+
     |                |       |         |          |    |
      6LN          6LR         6LBR/eVPN            6LN
       |            |              |                 |
       |            |              |  [via EVPN    ] |
       | <vSwitch>  |  Ethernet    |  [Data Tunnels] |
       |            |              |                 |
       |            |              |                 |
       |  RA(PIO)   |              |                 |
       | not onlink |              |                 |
       |<-----------|              |                 |
       |            |              |                 |
       |  Packet    |              |                 |
       |----------->|              |                 |
       |            |              |                 |
       |            | AMR (SLLAO)  |                 |
       |            |------------->|                 |
       |            |              |                 |
       |            | AMC (TLLAO)  |                 |
       |            |<-------------|                 |
       |            |              |                 |
       |    NCE in STALE state     |                 |
       |            |                                |
       |            |            Packet              |
       |            |------------------------------->|
       |            |                                |
       |    NCE in DELAY state     |                 |
       |            |              |                 |
    ]]>
       </artwork>
</figure>

<t>
  If it is not found,
  <xref target="I-D.thubert-6lo-unicast-lookup"/> provides the capability to
  indicate immediately that the mapping is not known with a "not found" status
  in the AMC, as opposed to waiting for an NS(lookup) and retries to time out
  per <xref target='RFC4861'/>.
 </t>
 <t>
  In a fully stateful subnet where all nodes register all their addresses with
  <xref target="RFC8505"/>, this means that the looked up address is not
  present in the network; in that case the packet is dropped and an ICMP error
  type 1 "Destination Unreachable" code 3 "Address unreachable" <xref target=
  'RFC4443'/> is returned as shown in <xref target="unilookfail"/>.
</t>
<figure anchor="unilookfail">
          <name>Unicast Lookup failure</name>
       <artwork align="center" name="" type="" alt="">
       <![CDATA[

           Local                 Local
           Server                 Leaf
     +----------------+       +---------+
     |                |       |         |
      6LN          6LR         6LBR/eVPN
       |            |              |
       |            |              |
       | <vSwitch>  |  Ethernet    |
       |            |              |
       |            |              |
       |   RA(PIO   |              |
       |not on-link)|              |
       |<-----------|              |
       |            |              |
       |  Packet    |              |
       |----------->|              |
       |            |              |
       |            | EDAR(lookup) |
       |            |------------->|
       |            |              |
       |            | EDAC(status= |
       |            | "Not Found") |
       |            |<-------------|
       |ICMPv6 Error|              |
       | "Address   |              |
       |Unreachable"|              |
       |<-----------|              |
       |         Drop Packet       |
       |            |              |
    ]]>
       </artwork>
</figure>

  <t>
  Note that the figures above make no assumption on the pull vs. push model.
  In the case of pull model, the 6LBR queries the eVPN support when it does not have the mapping information to satisfy a request.
  <xref target="Figpull"/> illustrates a successful pull model lookup flow,
  when the route type 2 for the mapping is already known on the eVPN side.

</t>

<figure anchor="Figpull">
          <name>Pull models</name>
       <artwork align="center" name="" type="" alt="">
       <![CDATA[
           Server                       Leaf
     +----------------+          +----------------+
     |                |          |                |
      6LN          6LR            6LBR        eVPN
       |            |              |            |
       | <vSwitch>  |  Ethernet    | <call I/F> |
       |            |              |            |
       |            |              |            |
       |            |              |            | Receive eVPN
       |            |              |            | route type 2 for
       |            |              |            | remote address A'
       |            |              |            | [via BGP Signalling]
       |            |              |            |<-----------------
       |            |              |     store a mapping state
       |            |              |            |
       |Packet for A'              |            |
       |----------->|              |            |
       |            |EDAR(lookup A')            |
       |            |------------->|            |
       |            |              |Query addr A'
       |            |              |----------->|
       |            |              |            |
       |            |              | return LLA |
       |            |              |<-----------|
       |            |              |            |
       |            |EDAC(A''s TLLA)            |
       |            |<-------------|            |
       |            |              |            |
       |            |            Packet for A'  |
       |            |            [via EVPN    ] |
       |            |            [Data Tunnels] |
       |            |----------------------------------->
       |            |              |            |
    ]]>
       </artwork>
</figure>

<t>
  In the case of push model, the eVPN support synchronizes its state upon a route type 2 with the 6LBR, and the 6LBR maintains an abstract data structure for all information known to eVPN. This way, the 6LBR already has the mapping information to satisfy any request for an existing mapping and
  it can answer right away.
  <xref target="Figpush"/> illustrates a successful push model lookup flow,
  when the 6LBR is already in possession of the mapping.
</t>

<figure anchor="Figpush">
          <name>Push model</name>
       <artwork align="center" name="" type="" alt="">
       <![CDATA[
           Server                       Leaf
     +----------------+          +----------------+
     |                |          |                |
      6LN          6LR            6LBR        eVPN
       |            |              |            |
       | <vSwitch>  |  Ethernet    | <call I/F> |
       |            |              |            |
       |            |              |            |
       |            |              |            |
       |            |              |            | Receive eVPN
       |            |              |            | route type 2 for
       |            |              |            | remote address A'
       |            |              |            | [via BGP Signalling]
       |            |              |            |<-----------------
       |            |              |     store a mapping state
       |            |              |            |
       |            |              |indicate LLA|
       |            |              |<-----------|
       |            |    store a mapping state  |
       |            |              |            |
       |Packet for A'              |            |
       |----------->|              |            |
       |            |EDAR(lookup A')            |
       |            |------------->|            |
       |            |              |            |
       |            |EDAC(R's TLLA)|            |
       |            |<-------------|            |
       |            |              |            |
       |            |            Packet for A'  |
       |            |            [via EVPN    ] |
       |            |            [Data Tunnels] |
       |            |----------------------------------->
       |            |              |            |
    ]]>
       </artwork>
</figure>

  <t>
  In a mixed environment, a lookup failure (the mapping is not found though
  the address is present in the network) may be caused by a legacy node that
  was node discovered (aka a silent node).
  In that case, it is an administrative decision for the 6LR to broadcast an
  NS(lookup) or to return an error as shown in <xref target="unilookfail"/>.
  </t>

</section> <!-- Unicast Address Lookup with the 6LBR -->

</section> <!-- Extending 6LoWPAN ND -->





<section anchor='prereq'><name>Requirements on the eVPN-Unaware Host</name>
<t>
   This document describes how eVPN routing can be extended to reach a Host.
   This section specifies the minimal eVPN-independent functionality that the Host
   needs to implement to obtain routing services for its addresses.
</t>

 <section anchor='prereq6lp'><name>Support of 6LoWPAN ND</name>
<t>
   A host sees a prefix as not on-link (e.g., it learned that prefix in a PIO
   in a RA with the L flag not set) should not attempt to resolve an address
   within that prefix using a multicast NS(lookup).
   Instead, it must pass its packets to a router, preferably one that advertises that prefix in a PIO; it must register the address that it uses as source to that router to enable source address validation using
   <xref target='RFC8505'/>.
   It is recommended that the Host also implements <xref target='RFC8928'/> to
   prove its ownership of its addresses.
</t><t>
   The Host is expected to request routing services from a router only if that
   router originates RA messages with a 6CIO that has the L, P, and E flags all
   set to 1 as discussed in <xref target='R7400'/>, unless configured to do so.
   To obtain routing services for one of its addresses, the host must register
   the address to a router that advertises the prefix, setting the "R" and "T"
   flags in the EARO to 1 as discussed in <xref target='R8505ER'/> and <xref target='R8505ETID'/>, respectively.
</t><t>
   This document echoes the behavior specified in <xref target='RFC9010'/>
   whereby, when the R Flag set to 1 in a NS(EARO) is not echoed in the NA(EARO), the host must understand that the route injection failed, and
   if the R flag is reset later in an asynchronous NA(EARO), the host must
   understand that routing service has failed.
</t><t>
   The host may attach to multiple 6LRs and is expected to prefer those that provide routing services. The abstract model for this is a P2MP interface
   that wraps together as many P2P IP Links the host has adjacencies to 6LRs
   over that interface. The IPv6 address and the subnet are associated to that
   interface.
   The interface may be virtual and it may bundle multiple physical Ethernet
   interfaces that connect to the individual 6LRs over point to point wires,
   possibly via a software switch.
   It can also be associated to one physical interface to an external switch,
   either way the PI Links can be associated to sub-interface of the interface.

</t>
<t>
   The Host needs to register to all the 6LRs from which it desires routing
   services. The multiple Address Registrations to several 6LRs should be
   performed in a rapid sequence, using the same EARO for the same Address.
   Gaps between the Address Registrations will invalidate some of the routes
   till the Address Registration finally shows on those routes.
   The routers recognize the same (ROVR, TID) as the signal of a multihomed
   address and maintain all the routes.
</t>
 <figure anchor='fRegmul' suppress-title='false'><name>First Host Registration Flow</name>
 <artwork align="center"><![CDATA[
    Local            Local          Local
    Server           Leaf 1         Leaf 2           Reflector
   +-------+       +---------+    +---------+       +---------+
   |       |       |         |    |         |       |         |
      6LN           6LBR/eVPN      6LBR/eVPN             |
       |                |              |                 |
       |    Ethernet    |              |                 |
       |                |              |       [via BGP Signalling]
       |                |              |                 |
       |   NS(EARO)     |              |                 |
       |--------------->|              |                 |
       |      install local state      |                 |
       |                |                                |
       |                |----------install RT A'-------->|
       |   NA(EARO)     |              |                 |
       |<---------------|              |                 |
       |                |              |                 |
       |                |              |<------ RT  A'---|
       |                |    install remote state        |
       |                |              |                 |
       |             NS(same EARO)     |                 |
       |------------------------------>|                 |
       |                |    install local state         |
       |                |              |                 |
       |                |              |-install RT A''->|
       |             NA(same EARO)     |                 |          
       |<------------------------------|                 |
       |                |              |                 |
       |                |<------------ RT A''------------|
       |     install remote state      |                 |
       |                |              |                 |

    ]]></artwork>
 </figure>
<t><xref target='RFC8505'/> introduces error Status values in the NA(EARO)
   which can be received synchronously upon an NS(EARO) or asynchronously.
   The Host needs to support both cases and refrain from using the address
   when the Status value indicates a rejection.
</t>

</section> <!-- end section "Support of 6LoWPAN ND" -->



</section> <!-- "Requirements to be an eVPN-Unaware Host" -->















<section anchor='upd'><name>Enhancements to eVPN</name>
    <t>This section addresses the necessary changes to EVPN formats and behavior to support
        address registration security per <xref target='RFC8928'/> and mobility per <xref target='RFC8505'/>
        while retaining interoperability with traditional nodes.
        With 6LR injecting not only MACs via packet sources and TTLAO options but also ROVR into mobility
        extended community
        their semantics will be somewhat extended. Specifically following issues have to be addressed:</t>
    <ul>
        <li>
            ROVR extends the semantics of the type-2 MAC advertisement via changes in MAC
            Mobility Extended Community in the sense that the MAC
            must be aligned with the ROVR and under normal circumstances
            only the validity of ROVR guarantees that the type-2
            MAC can be allocated to the requester. A MAC validated by ROVR should take precedence
            over MAC addresses allocated without using it given it presents a much more trustworthy
            topological information (it will be called ROVR MAC in further
            text). EVPN nodes not supporting extensions introduced by this document
            will need to be led to believe that a MAC ROVR is to be preferred over any advertisement
            they see as long a ROVR MAC is present. Nevertheless, primary key of NRLI is still
            the MAC address as defined in <xref target='RFC7432'/>, Section 7.2 and 7.7. This implies
            that the same MAC (and consequently ROVR MAC) can be assigned multiple IP addresses and
            those represent independent NLRIs.
        </li>
        <li>
            TID field in EARO is smaller than mobility sequence number in <xref target='RFC7432'/>.
            To allow an ROVR MAC mobility to "win" over normal MACs signalling must be introduced to
            distinguish TID generated sequence numbers from normal sequence numbers.
        </li>
        <li>
            EVPN needs to deal with lifetime monitoring of the Address Registration period.
        </li>
    </ul>
    <t>
        EVPN Signalling is not used to carry ROVR since without challenge per  <xref target="RFC8928"/>
        they do not represent any difference over using the IP/MAC combination.
        Additionally,
        backwards compatibility could not be preserved given comparing routes based on ROVR would
        present a change in primary key of NLRIs which non-ROVR routes could not follow. An indication
        from a ROVR node that a MAC has been validated by proof of ownership is enough to convey the
        necessary information.
        Only a small hash of the ROVR is carried to allow to distinguish between MAC moves and MAC
        duplicate in MAC ROVR case.

    </t>

<section anchor='tgt'><name>ROVR MAC Mobility Extended Community</name>

    <t>
        Extending MAC Mobility Extended Community allows to design a solution that,
        while backwards compatible, allows to introduce MAC ROVR as "more trusted"
        entities. <xref target="feVPNtgt"/> presents the according extensions that
        will however necessitate some further explanation.
    </t>

    <t>
        To introduce a "precedence" of ROVR MACs over normal EVPN MACs ROVR MACs are advertised
        to look like "sticky" MACs for non-ROVR nodes.
        As defined in the glossary, for simplicity reasons such nodes will be called non-ROVR nodes vs. ROVR nodes.
        The "sticky" bit will force non-ROVR nodes to disregard the sequence number and
        accept any NLRI route provided.
    </t>

    <t>ROVR nodes MUST set the "R" flag in Mobility Extended Community to indicate that
    the advertisement is a ROVR MAC in case the host followed the according procedures.
        ROVR MACs use (instead of increasing the normal sequence
    number) the TID in the high bits of the sequence number field to "override" any normal MAC
    advertisement (further considerations will be provided in <xref target="evpnproc"/>). </t>

    <t>ROVR nodes MUST set the "V" flag if the address assignment passed proof of ownership per
        <xref target="RFC8928"/>. Such addresses will be preferred by ROVR nodes over non
    validated ROVR MACs. </t>

    <t>In case a ROVR node configures the address as "sticky" (since the sticky bit semantics
    have been changed to the point a ROVR cannot tell whether address is really sticky unless
    advertised as such by non-ROVR node) a new "X" flag called "super sticky" is introduced.</t>

 <figure anchor='feVPNtgt' suppress-title='false'><name>New NLRI</name>
 <artwork>
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | Type=0x06     | Sub-Type=0x00 |       |X|V|R|S| Reserved=0    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       TID     |                 ROVR Hash                     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
</artwork>
 </figure>
 <t>Flags:</t>

    <dl  spacing='normal'>

	<dt>S:</dt><dd>Sticky as defined in <xref target='RFC7432'/>.</dd>
    <dt>R:</dt><dd>ROVR Capable indicates that the advertisement is originated
            after processing signalling from host meeting the requirements in <xref target="prereq"/>.
            This indicates a ROVR MAC.</dd>
        <dt>V:</dt><dd>ROVR Validated indicates that the MAC passed proof of ownership per
            <xref target="RFC8928"/>. Presence of this bit implies the "R" bit being set irregardless of
    its value.</dd>
        <dt>X:</dt><dd>Super Sticky indicates that the MAC ROVR is sticky and should follow
                procedures of sticky per <xref target='RFC7432'/>. </dd>
	</dl>

    <t>
        Sequence Number Field:
    </t>
    <dl  spacing='normal'>

        <dt>TID:</dt><dd>contains the MAC ROVR TID per <xref target="RFC8505"/>. This MUST NOT be
    zero, i.e. a ROVR </dd>
        <dt>ROVR Hash:</dt><dd>Hash of ROVR used to generate the according MAC ROVR. Hash is built
            by XOR'ing ROVR bytes in network order into the least significant byte and rotating
            the three bytes after every byte by one bit to the left.</dd>
    </dl>

</section> <!-- end section "Updated eVPN Target Option" -->

    <section anchor='evpnproc'><name>Extended ROVR MAC Procedures</name>
        <t>In case a non-ROVR node advertises a sticky MAC by setting the "S" bit and a ROVR node
            sees an ROVR address registration for the same MAC it MUST follow procedures per <xref target='RFC7432'/>.</t>
        <t>In case a non-ROVR node advertises a sequence number larger than the one generated by TID on a ROVR
            node, the ROVR node SHOULD advertise a Sequence Number consisting of all bits being set to force a "roll-over" on all nodes and
        then fall back to advertising the TID generated sequence number again. In case a non-ROVR node persists in
        increasing the sequence number after that it is indication of violation of  <xref target='RFC7432'/> on its part.</t>
        <t>
            A ROVR node advertising a ROVR MAC that has not been validated and receiving same type-2 NLRI that has been
            validated MUST immediately withdraw its advertisement.
        </t>
        <t>
            A ROVR node advertising a ROVR MAC and receiving an equivalent ROVR MAC from other node with a higher TID
            MUST immediately withdraw its advertisement. This will allow the non-ROVR nodes to correctly interpret
            the sequence as MAC move despite ignoring the sequence number due to presence of "S" bit.
        </t>
        <t>
            A ROVR node that receives a ROVR MAC with "super sticky" indication and seeing the MAC locally MUST
            follow analogous procedures to  <xref target='RFC7432'/>.
        </t>
        <t>
            Multi-homing a MAC on mix of ROVR and non-ROVR nodes will lead to operational notifications since
            per <xref target='RFC7432'/> the non-ROVR node will interpret the situation as a sticky MAC that
            has shown up on its local interface unless an implementation is somewhat clever and understands that
            the presence of the same ESI on all the routes indicates that this situation does not represent a
            sticky MAC being moved.
        </t>

    </section>


</section> <!-- Enhancements to  eVPN -->








<section anchor='op'><name>Protocol Operations </name>

<t>
Following section illustrates several situations and resulting signalling in EVPN from the point of view
    of a ROVR node.
 </t>

 <figure anchor='fReg1' suppress-title='false'><name>Host Registration</name>
 <artwork align="center"><![CDATA[
    Local            Local              Route           Remote
    Server           Leaf             Reflector         Leaf
   +-------+       +---------+        +-------+        +---------+
   |       |       |         |        |       |        |         |
      6LN           6LBR/eVPN            BGP            eVPN/6LBR
       |                |                 |                |
       |    Ethernet    |      [via BGP Signalling]        |
       |                |                 |                |
       |                |                 |                |
       |   NS(EARO)     |                 |                |
       |--------------->|                 |                |
       |                |                 |                |
       |      install local state         |                |
       |                |                 |                |
       |                |  MAC ROVR Route A'               |
       |                |---------------->|                |
       |   NA(EARO)     |                 |                |
       |<---------------|                 |                |
       |                |                 | MAC ROVR Route A'
       |                |                 |--------------->|
       |                |                 |                |
       |                |                 |    install local state

    ]]></artwork>
 </figure>
 <figure anchor='fReg2' suppress-title='false'><name>Host Registration Renewal</name>
 <artwork align="center"><![CDATA[
    Local                 Local                   Route
    Server                Leaf                  Reflector
   +-------+       +-----------------+          +-------+
   |       |       |                 |          |       |
      6LN           6LBR         eVPN              BGP
       |              |            |                |
       |   Ethernet   |            |                |
       |              |            |         [via BGP Signalling]
       |              |            |                |
       |  NS(EARO(    |            |                |
       |    TID+1))   |            |                |
       |------------->|            |                |
       |              |            |                |
       |   renew lifetime locally  |                |
       |              |            | MAC ROVR Route A' (TID+1)
       |              |            |--------------->|
       | NA(EARO      |            |                |
       |  status = 0))|            |                |
       |<-------------|            |                |
       |              |            |                |
    ]]></artwork>
 </figure>
 <figure anchor='fRegcons' suppress-title='false'><name>Multihoming</name>
 <artwork align="center"><![CDATA[
    Local            Local              Route           Remote
    Server           Leaf             Reflector         Leaf
   +-------+       +---------+        +-------+        +---------+
   |       |       |         |        |       |        |         |
      6LN           6LBR/eVPN            BGP            eVPN/6LBR
       |                |                 |                |
       |    Ethernet    |                 |                |
       |                |        [via BGP Signalling]      |
       |                |                 |                |
       |   NS(EARO)     |                 |                |
       |--------------->|                 |                |
       |                |                 |                |
       |                |  MAC ROVR Route A'               |
       |                |---------------->|                |
       |                |                 |  MAC ROVR Route A'
       |                |                 |--------------->|
       |   NA(EARO      |                 |                |
       |   status = 0)) |                remote state with |
       |<---------------|                same A', TID, ESI, Flags,
       |                |                ROVR Hash
       |                |                 |                |
    ]]></artwork> </figure>

 <figure anchor='fRegdup' suppress-title='false'><name>Duplicate Addresses</name>
 <artwork align="center"><![CDATA[
    Local            Local              Route           Remote
    Server           Leaf             Reflector         Leaf
   +-------+       +---------+        +-------+        +---------+
   |       |       |         |        |       |        |         |
      6LN           6LBR/eVPN            BGP            eVPN/6LBR
       |                |                 |                |
       |    Ethernet    |                 |                |
       |                |        [via BGP Signalling]      |
       |                |                 |                |
       |   NS(EARO)     |                 |                |
       |--------------->|                 |                |
       |                |                 |                |
       |                |  MAC ROVR Route A'               |
       |                |  ESI X, TID Z   |                |
       |                |  ROVR Hash F    |                |
       |                |---------------->|                |
       |                |                 |         Local A' Present
       |                |                 |         with ESI X', 
       |                |                 |         ROVR Hash G
       |                |                 |                |
       |                |                 |  MAC ROVR Route A'
       |                |                 |  ESI X', ROVR Hash G'
       |                |                 |<---------------|
       |                |<----------------|                |
       |   NA(EARO(     |                 |                |
       |   status = 1)) |                 |                |
       |<---------------|                 |                |
       |                |                 |                |
       |                |                 |                |
    ]]></artwork> </figure>

 <figure anchor='fRegold' suppress-title='false'><name>Address Move on Registration</name>
 <artwork align="center"><![CDATA[
    Local            Local              Route           Remote
    Server           Leaf             Reflector         Leaf
   +-------+       +---------+        +-------+        +---------+
   |       |       |         |        |       |        |         |
      6LN           6LBR/eVPN            BGP            eVPN/6LBR
       |                |                 |                |
       |    Ethernet    |                 |                |
       |                |        [via BGP Signalling]      |
       |                |                 |                |
       |   NS(EARO)     |                 |                |
       |--------------->|                 |                |
       |                |                 |                |
       |                |  MAC ROVR Route A'               |
       |                |  ESI X, TID Z   |                |
       |                |  ROVR Hash F    |                |
       |                |---------------->|                |
       |                |                 |         Local A' Present
       |                |                 |         with ESI X',
       |                |                 |         ROVR Hash F, TID Z+1
       |                |                 |                |
       |                |                 |  MAC ROVR Route A'
       |                |                 |  ESI X', ROVR Hash F, TID Z+1
       |                |                 |<---------------|
       |   NA(EARO(     |<----------------|                |
       |   status = 3)) |                 |                |
       |<---------------|                 |                |
       |                |                 |                |
       |                |                 |                |
    ]]></artwork> </figure>

 <figure anchor='fRegmov' suppress-title='false'><name>Address Move</name>
 <artwork align="center"><![CDATA[
    Local            Local              Route           Remote
    Server           Leaf             Reflector         Leaf
   +-------+       +---------+        +-------+        +---------+
   |       |       |         |        |       |        |         |
      6LN           6LBR/eVPN            BGP            eVPN/6LBR
       |                |                 |                |
       |    Ethernet    |                 |                |
       |                |        [via BGP Signalling]      |
       |                |                 |                |
       |   NS(EARO)     |                 |                |
       |--------------->|                 |                |
       |                |                 |                |
       |           Local State:           |                |
       |           MAC ROVR Route A'      |                |
       |           ESI X, TID Z           |                |
       |           ROVR Hash F            |                |
       |                |                 |        Local A' Present
       |                |                 |        with ESI X',
       |                |                 |        ROVR Hash F, TID Z+1
       |                |                 |                |
       |                |                 |  MAC ROVR Route A'
       |                |                 |  ESI X', Hash F, TID Z+1
       |                |                 |<---------------|
       |   NA(EARO(     |<----------------|                |
       |   status = 4)) |                 |                |
       |<---------------|                 |                |
       |                | Withdraw MAC ROVR Route A'       |
       |                |---------------->|                |
       |                |                 |--------------->|
    ]]></artwork> </figure>

 <figure anchor='fRegTO' suppress-title='false'><name>Lifetime Elapse</name>
 <artwork align="center"><![CDATA[
     Local            Local              Route           Remote
    Server           Leaf             Reflector         Leaf
   +-------+       +---------+        +-------+        +---------+
   |       |       |         |        |       |        |         |
      6LN           6LBR/eVPN            BGP            eVPN/6LBR
       |                |                 |                |
       |    Ethernet    |                 |                |
       |                |        [via BGP Signalling]      |
       |                |                 |                |
   Lifetime Expired     |                 |                |
       |                | Withdraw MAC ROVR Route A'       |
       |                |---------------->|                |
       |                |                 |--------------->|
]]></artwork> </figure>

</section>

<section anchor='security-considerations'><name>Security Considerations</name>
 <t>TBD
 </t>

</section>


<section anchor='iana-considerations'><name>IANA Considerations</name>
<!--

<section anchor='ianaearostat'><name>New EARO Status Value</name>

    <t>
    This specification extends the "Address Registration Option Status Values" subregistry i the "Internet Control Message Protocol version 6 (ICMPv6) Parameters" to add the following value:
    </t>

   <table anchor='IAROstatus'><name>Rejection values of the EARO Status </name>
   <thead>
      <tr><td>Value</td><td>Description</td><td>Reference</td></tr>
   </thead><tbody>

       <tr><td>11 (suggested)</td><td>Not Found: The address is not present in the Address Registrar</td>
      <td>This document</td></tr>
   </tbody>

   </table>

</section>  New EARO Status Value -->


</section>

<section anchor='Acks'><name>Acknowledgments</name>
<t>
   The authors wish to thank you for reading that far.
  </t>

</section>


  </middle>

 <back>

      <displayreference   target="I-D.ietf-rift-rift"  to="RIFT"/>
    <displayreference target="I-D.thubert-6lo-unicast-lookup" to="UNICAST-LOOKUP"/>


 <references><name>Normative References</name>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4443.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4861.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4862.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6775.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6085.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7400.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7432.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8505.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8365.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8928.xml'/>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.thubert-6lo-unicast-lookup.xml'/>


 </references>
 <references><name>Informative References</name>
   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8929.xml'/>

   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.9010.xml'/>

   <xi:include href='https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-rift-rift.xml'/>



    <reference anchor="IANA-EARO-STATUS" target="https://www.iana.org/assignments/icmpv6-parameters/icmpv6-parameters.xhtml#address-registration">
      <front>
        <title>Address Registration Option Status Values</title>
        <author>
          <organization>IANA</organization>
        </author>
        <date/>
      </front>
    </reference>

 </references>


 </back>
</rfc>
